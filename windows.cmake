if(NOT DEFINED VCPKG_TARGET_TRIPLET)
  set(VCPKG_TARGET_TRIPLET "x64-windows-xnet" CACHE STRING "")
endif()

include("${CMAKE_CURRENT_LIST_DIR}/config.cmake")

if(DEFINED CMAKE_CXX_CLANG_TIDY)
  unset(CMAKE_CXX_CLANG_TIDY CACHE)
endif()

# Set runtime library.
set(CMAKE_MSVC_RUNTIME_LIBRARY "" CACHE STRING "")
if(VCPKG_CRT_LINKAGE STREQUAL "dynamic")
  set(VCPKG_CRT_FLAG "/MD")
elseif(VCPKG_CRT_LINKAGE STREQUAL "static")
  set(VCPKG_CRT_FLAG "/MT")
else()
  message(FATAL_ERROR "Invalid VCPKG_CRT_LINKAGE: \"${VCPKG_CRT_LINKAGE}\".")
endif()

if(VCPKG_BUILDING_PORT)
  set(VCPKG_DEBUG_FLAG "/Zi")
  set(VCPKG_DEBUG_LINK "/OPT:REF /DEBUG:FULL /INCREMENTAL:NO")
else()
  set(VCPKG_DEBUG_FLAG "/ZI /JMC")
  set(VCPKG_DEBUG_LINK "/DEBUG:FASTLINK")
endif()

# Set charset flag.
set(CHARSET_FLAG "/utf-8")
if(DEFINED VCPKG_SET_CHARSET_FLAG AND NOT VCPKG_SET_CHARSET_FLAG)
  set(CHARSET_FLAG)
endif()

# MSVC Defines
set(MSVC_DEFINES "/DWIN32 /D_WIN64 /D_WINDOWS /DWINVER=0x0A00 /D_WIN32_WINNT=0x0A00")
set(MSVC_DEFINES "${MSVC_DEFINES} /D_CRT_SECURE_NO_DEPRECATE /D_CRT_SECURE_NO_WARNINGS /D_CRT_NONSTDC_NO_DEPRECATE")
set(MSVC_DEFINES "${MSVC_DEFINES} /D_ATL_SECURE_NO_DEPRECATE /D_SCL_SECURE_NO_WARNINGS")

# MSVC Flags
set(MSVC_FLAGS "/W3 /wd4101 /wd4275 /wd4996 /wd26812 /wd28251")
set(MSVC_FLAGS "${MSVC_FLAGS} /diagnostics:column /FC")
set(MSVC_FLAGS "${MSVC_FLAGS} ${MSVC_DEFINES}")
set(MSVC_FLAGS "${MSVC_FLAGS} ${CHARSET_FLAG}")

# Compiler Flags
set(CMAKE_C_FLAGS "${MSVC_FLAGS} ${VCPKG_C_FLAGS}" CACHE STRING "")
set(CMAKE_C_FLAGS_DEBUG "/Od /RTC1 ${VCPKG_DEBUG_FLAG} ${VCPKG_CRT_FLAG}d /D_DEBUG ${VCPKG_C_FLAGS_DEBUG}" CACHE STRING "")
set(CMAKE_C_FLAGS_RELEASE "/O2 /Oi /GS- /analyze- ${VCPKG_CRT_FLAG} /DNDEBUG ${VCPKG_C_FLAGS_RELEASE}" CACHE STRING "")
set(CMAKE_C_FLAGS_MINSIZEREL "/O1 /Oi /GS- /analyze- ${VCPKG_CRT_FLAG} /DNDEBUG ${VCPKG_C_FLAGS_RELEASE}" CACHE STRING "")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "/O1 /Oi /GS- ${VCPKG_DEBUG_FLAG} ${VCPKG_CRT_FLAG} ${VCPKG_C_FLAGS_RELEASE}" CACHE STRING "")

set(CMAKE_CXX_FLAGS "/EHsc ${CMAKE_C_FLAGS} ${VCPKG_CXX_FLAGS}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} ${VCPKG_CXX_FLAGS_DEBUG}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} ${VCPKG_CXX_FLAGS_RELEASE}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_MINSIZEREL "${CMAKE_C_FLAGS_MINSIZEREL} ${VCPKG_CXX_FLAGS_RELEASE}" CACHE STRING "")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_RELWITHDEBINFO} ${VCPKG_CXX_FLAGS_RELEASE}" CACHE STRING "")

# Linker Flags
foreach(LINKER SHARED_LINKER MODULE_LINKER EXE_LINKER)
  set(CMAKE_${LINKER}_FLAGS "${VCPKG_LINKER_FLAGS}" CACHE STRING "")
  set(CMAKE_${LINKER}_FLAGS_DEBUG "${VCPKG_DEBUG_LINK} ${VCPKG_LINKER_FLAGS_DEBUG}" CACHE STRING "")
  set(CMAKE_${LINKER}_FLAGS_RELEASE "/OPT:REF /OPT:ICF /INCREMENTAL:NO ${VCPKG_LINKER_FLAGS_RELEASE}" CACHE STRING "")
  set(CMAKE_${LINKER}_FLAGS_MINSIZEREL "/OPT:REF /OPT:ICF /INCREMENTAL:NO ${VCPKG_LINKER_FLAGS_RELEASE}" CACHE STRING "")
  set(CMAKE_${LINKER}_FLAGS_RELWITHDEBINFO "${VCPKG_DEBUG_LINK} ${VCPKG_LINKER_FLAGS_RELEASE}" CACHE STRING "")
endforeach()

# Disable logo for compiler and linker.
set(CMAKE_CL_NOLOGO "/nologo" CACHE STRING "")

# Assembler Flags
set(CMAKE_ASM_MASM_FLAGS_INIT "/nologo")

# Resource Compiler Flags
set(CMAKE_RC_FLAGS_INIT "/nologo /c65001")
set(CMAKE_RC_FLAGS_DEBUG_INIT "/D_DEBUG")
set(CMAKE_RC_FLAGS_RELEASE_INIT "/DNDEBUG")
set(CMAKE_RC_FLAGS_MINSIZEREL_INIT "/DNDEBUG")
set(CMAKE_RC_FLAGS_RELWITHDEBINFO_INIT "")
