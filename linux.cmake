include_guard(GLOBAL)

if(CMAKE_HOST_SYSTEM_NAME STREQUAL "Linux")
  set(CMAKE_CROSSCOMPILING OFF CACHE BOOL "")
endif()
set(CMAKE_SYSTEM_NAME Linux CACHE STRING "")
if(VCPKG_TARGET_ARCHITECTURE STREQUAL "x64")
  set(CMAKE_SYSTEM_PROCESSOR x86_64 CACHE STRING "")
endif()

get_property(_CMAKE_IN_TRY_COMPILE GLOBAL PROPERTY IN_TRY_COMPILE)
if(NOT _CMAKE_IN_TRY_COMPILE)
  set(CMAKE_C_STANDARD 11 CACHE STRING "")
  set(CMAKE_C_STANDARD_REQUIRED ON CACHE STRING "")
  set(CMAKE_C_EXTENSIONS OFF CACHE STRING "")

  set(CMAKE_CXX_STANDARD 20 CACHE STRING "")
  set(CMAKE_CXX_STANDARD_REQUIRED ON CACHE STRING "")
  set(CMAKE_CXX_EXTENSIONS OFF CACHE STRING "")

  set(CMAKE_AR "/opt/llvm/bin/llvm-ar" CACHE STRING "")
  set(CMAKE_NM "/opt/llvm/bin/llvm-nm" CACHE STRING "")
  set(CMAKE_RANLIB "/opt/llvm/bin/llvm-ranlib" CACHE STRING "")

  set(CMAKE_C_COMPILER "/opt/llvm/bin/clang" CACHE STRING "")
  set(CMAKE_CXX_COMPILER "/opt/llvm/bin/clang++" CACHE STRING "")

  string(APPEND CMAKE_C_FLAGS_INIT " -fdiagnostics-absolute-paths -fPIC ${VCPKG_C_FLAGS}")
  string(APPEND CMAKE_CXX_FLAGS_INIT " -fcoroutines-ts -fdiagnostics-absolute-paths -fPIC ${VCPKG_CXX_FLAGS}")
  string(APPEND CMAKE_C_FLAGS_DEBUG_INIT " ${VCPKG_C_FLAGS_DEBUG}")
  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT " ${VCPKG_CXX_FLAGS_DEBUG}")
  string(APPEND CMAKE_C_FLAGS_RELEASE_INIT " -flto=thin ${VCPKG_C_FLAGS_RELEASE}")
  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT " -flto=thin -fwhole-program-vtables ${VCPKG_CXX_FLAGS_RELEASE}")

  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT " ${VCPKG_LINKER_FLAGS}")
  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT " ${VCPKG_LINKER_FLAGS}")

  string(APPEND CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT " -ltbb_debug")
  string(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT " -ltbb_debug")

  string(APPEND CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT " -O3 -Wl,-S -Wl,--thinlto-cache-dir=lto -ltbb")
  string(APPEND CMAKE_EXE_LINKER_FLAGS_RELEASEINIT " -O3 -Wl,-S -Wl,--thinlto-cache-dir=lto -ltbb")

  if(VCPKG_CRT_LINKAGE STREQUAL "static")
    string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT " -pthread -static")
    string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT " -pthread -static")
  endif()

  add_definitions(-D_DEFAULT_SOURCE=1)  
endif()
